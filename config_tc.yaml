# distributed training
nodes: 1
gpus: 1 # I recommend always assigning 1 GPU to 1 node
nr: 0 # machine nr. in node (0 -- nodes - 1)
dataparallel: 0 # Use DataParallel instead of DistributedDataParallel
workers: 8

# train options
seed: 42 # sacred handles automatic seeding when passed in the config
batch_size: 128
start_epoch: 0
epochs: 200
cuda: 'cuda:0'
# model options
resnet: "resnet18"

# loss options
optimizer: "Adam" # or LARS (experimental)
weight_decay: 1.0e-6 # "optimized using LARS [...] and weight decay of 10âˆ’6"
img_scale_factor: 2
img_root_dir: ["F:/data/TC_IR_IMAGE/","/home/dl/data/TCIE/TC_IR_IMAGE"]
sea_surface_temperature: ['/home/dl/data/TCIE/mcs/sst2000-2019.nc','F:/data/msc/sst2000-2019.nc']
hidden_dim: 256
img_size: 256
sst_size: 60
past_window: 3
stride: 1
dropout: 0.0
time_spot:  ['0000', '0600', '1200', '1800']
train_years: [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
              2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]
test_years: [ 2017]
model_save1: ['/home/dl/Public/GSW/project/TC_intensity_estimation/model/','F:/Python_Project/TC_intensity_estimation/model/']
